<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.segema.sys.domain.SysUser">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" readOnly="true"/>

	<resultMap id="BaseResultMap" type="cn.segema.sys.domain.vo.SysUserVo">
		<id column="userid" property="userId" jdbcType="VARCHAR" />
		<result column="loginname" property="loginName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nickname" property="nickName" jdbcType="VARCHAR" />
		<result column="mobilenumber" property="mobileNumber" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="INTEGER" />
		<result column="bornaddress" property="bornAddress" jdbcType="VARCHAR" />
		<result column="borndate" property="bornDate" jdbcType="DATE" />
		<result column="weight" property="weight" jdbcType="DECIMAL" />
		<result column="height" property="height" jdbcType="DECIMAL" />
		<result column="bloodtype" property="bloodType" jdbcType="INTEGER" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		userid as userId,
		loginname as loginName,
		password as password,
		nickname as nickName,
		mobilenumber as mobileNumber,
		gender as gender,
		bornaddress as bornAddress,
		borndate as bornDate,
		weight as weight,
		height as height,
		bloodtype as bloodType,
		email as email, 
		address as address
	</sql>
	
	
	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
				<if test="userId != null"> and userid = #{userId}</if>
				<if test="loginName != null">and loginname = #{loginName}</if>
				<if test="password != null">and password = #{password}</if>
				<if test="nickName != null">and nickname = #{nickName}</if>
				<if test="mobileNumber != null">and mobilenumber = #{mobileNumber}</if>
				<if test="gender != null">and gender = #{gender}</if>
				<if test="bornAddress != null">and bornaddress = #{bornAddress}</if>
				<if test="bornDate != null">and borndate = #{bornDate}</if>
				<if test="weight != null">and weight = #{weight}</if>
				<if test="height != null">and height = #{height}</if>
				<if test="bloodType != null">and bloodtype = #{bloodType}</if>
				<if test="email != null">and email = #{email}</if>
				<if test="address != null">and address = #{address}</if>
				
				<!-- 模糊查询 -->
				<if test="nickNameLike != null">and nickname like CONCAT("%",#{nickNameLike},"%")</if>
				<if test="bornAddressLike != null">and bornaddress like CONCAT("%",#{bornAddressLike},"%")</if>
			</trim>
		</where>
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</sql>
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(userid)
		from sys_user
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sys_user
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 根据ID查询 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where userid = #{userId}
	</select>
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.String">
		delete from sys_user
		where userid = #{userId}
	</delete>
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from sys_user
		<include refid="Base_Where_Clause" />
	</delete>

	<!-- 添加 -->	
	<insert id="insert" parameterType="cn.segema.sys.domain.SysUser">
		insert into sys_user(
			userid, 
			loginname, 
			password,
			nickname, 
			mobilenumber, 
			gender,
			bornaddress,
			borndate,
			weight,
			height,
			bloodtype,
			email,
			address,
			groupid
		)
		values (
			#{userId}, 
			#{loginName},
			#{password},
			#{nickName},  	           
			#{mobileNumber}, 
			#{gender},
			#{bornAddress},
			#{bornDate},
			#{weight},
			#{height},
			#{bloodType},
			#{email},
			#{address},
			#{groupId}
		)
	</insert>
	
	
	<!-- 通过ID更新 -->
	<update id="updateByIdSelective" parameterType="cn.segema.sys.domain.SysUser">
		update sys_user
		<set>
			<if test="loginName != null">loginname = #{loginName},</if>
			<if test="password != null">password = #{password},</if>
			<if test="nickName != null">nickname = #{nickName},</if>
			<if test="mobileNumber != null">mobilenumber = #{mobileNumber},</if>
			<if test="gender != null">gender = #{gender},</if>
			<if test="bornAddress != null">bornaddress = #{bornAddress},</if>
			<if test="bornDate != null">borndate = #{bornDate},</if>
			<if test="weight != null">weight = #{weight},</if>
			<if test="height != null">height = #{height},</if>
			<if test="bloodType != null">bloodtype = #{bloodType},</if>
			<if test="email != null">email = #{email},</if>
			<if test="address != null">address = #{address},</if>
		</set>
		where userid = #{userId}
	</update>
	
	<update id="updateById" parameterType="cn.segema.sys.domain.SysUser">
		update sys_user
		set sample_name = #{loginName},
		sample_value = #{password},
		sample_group = #{nickName},
		sample_type = #{mobileNumber},
		sample_order = #{gender},
		sample_status = #{bornAddress},
		sample_status = #{bornDate},
		sample_status = #{weight},
		sample_status = #{height},
		sample_status = #{bloodType},
		sample_status = #{email},
		sample_status = #{address},
		sample_status = #{groupid}
		where userid = #{userId}
	</update>
	
	<!-- 测试查询 -->
	<select id="testSelectList" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sys_user
		<include refid="Base_Where_Clause" />
	</select>
	
</mapper>